-include ../../common.mk

## where you install the pigeon
PIGEON_HEADER_PATH ?= /usr/local/include/pigeon

## output module .so file, user must define it!!
CURRENT_MODULE := $(CURRENT_MODULE_NAME).so

## specification file for current module
CURRENT_MODULE_FILE ?= $(CURRENT_MODULE_NAME).pg
## the c file(s) to implement this module, user can define it
CURRENT_MODULE_C ?= $(CURRENT_MODULE_NAME).c

## header auto-generated by mocc from the module spec file
CURRENT_MODULE_MOH := $(patsubst %.pg,%-pg.h, $(CURRENT_MODULE_FILE))
## the c file(s) auto-generated by mocc from your implement c file(s)
CURRENT_MODULE_MOC := $(patsubst %.c,%_out.c, $(CURRENT_MODULE_C))

all: $(CURRENT_MODULE)

## note this makefile is included in module sub dir!!
PROJ_DIR := ../..

MODULE_DIR := $(PROJ_DIR)/$(APP_SUBDIR)
MESSAGE_DIR := $(PROJ_DIR)/$(IDL_SUBDIR)

## where to put the module *.so files
MODULE_INSTALL_PATH ?= $(PROJ_DIR)/config/

## all message IDL files used by this module
MESSAGE_IDLS ?= $(shell ls $(MESSAGE_DIR)/*.pg)
#MESSAGE_PG_C := $(patsubst %.pg,%-pg.c, $(MESSAGE_IDLS))

## all other module path, may include the module spec file for others
SUB_MODULE_DIRS := $(shell ls $(MODULE_DIR))

## add all to include searching path set
MOCC_PP_FLAGS += -I$(RT_PATH)/include 
MOCC_PP_FLAGS += -I$(PROJ_DIR) -I$(PROJ_DIR)/include  -I$(MESSAGE_DIR)
MOCC_PP_FLAGS += -I$(PIGEON_HEADER_PATH)

## add all the modules directories into the incude searching path set!!
MOCC_PP_FLAGS += $(foreach SUB,$(SUB_MODULE_DIRS), -I$(MODULE_DIR)/$(SUB))
MOCC_FLAGS += --current-module $(CURRENT_MODULE_FILE)

MODULE_CFLAGS += $(MOCC_PP_FLAGS) 
## default mocc flag, specific the module spec file
ifeq ($(MOLA_DEBUG_BUILD), 1)
 	MOCC_FLAGS += -NP
endif

IGNORE_MOCC_CHECKING ?= 0
## if ignore the static checking ?? defined in user makefile
ifeq ($(IGNORE_MOCC_CHECKING),1)
	MOCC_FLAGS += --disable-static-analysis
endif

$(CURRENT_MODULE): $(CURRENT_MODULE_MOC) $(MESSAGE_PG_C)
	$(CC) -o $@ $^ $(MODULE_CFLAGS) $(MODULE_LDFLAGS)
	$(MOCHECKER) ./$@ || (rm -f $@ && false)

%_out.c: %.c $(CURRENT_MODULE_FILE)
	$(MOCC) $(MOCC_PP_FLAGS) $(MOCC_FLAGS) $<

.PHONY: clean install

install: $(CURRENT_MODULE)
	cp $(CURRENT_MODULE) $(MODULE_INSTALL_PATH)

clean:
	rm -f $(CURRENT_MODULE_MOC) $(CURRENT_MODULE_MOH) $(CURRENT_MODULE)
